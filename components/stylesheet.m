function stylesheet(isPause, amplitude, isJitter, isGaussian, isEcho, isAwg)
%---Program window---%
fig=uifigure('Name','TD signal process',...
'Units','normalized',...
'Position',[0.05 0.05 0.9 0.85],...
'NumberTitle','off');

%---Title---%

uicontrol(fig,'Style','text',...
            'Units','normalized',...
            'backgroundcolor',[0.5,0.75,0.75],...
            'Position',[0.019 0.95 0.30 0.03],...
            'String', 'Emulator procesare semnal',...
            'Fontsize',10);       

%---Actions---%
ActionText=uicontrol(fig,'Style','text',...
            'Units','normalized',...
            'backgroundcolor',[0.5,0.75,0.75],...
            'Position',[0.019 0.35 0.30 0.15],...
            'String', 'Inregistreaza',...
            'Fontsize',65); 

%---Edited---%
uicontrol(fig,'Style','text',...
            'Units','normalized',...
            'backgroundcolor',[0.5,0.75,0.75],...
            'Position',[0.70 0.31 0.25 0.05],...
            'String', 'Semnalul editat',...
            'Fontsize',25); 

%---Original Signal---%
uicontrol(fig,'Style','text',...
            'Units','normalized',...
            'backgroundcolor',[0.5,0.75,0.75],...
            'Position',[0.70 0.75 0.25 0.05],...
            'String', 'Semnalul inregistrat',...
            'Fontsize',25); 

%---Parameters Input signal---%

uicontrol(fig,'Style','text',...
            'Units','normalized',...
            'backgroundcolor',[0.5,0.75,0.75],...
            'Position',[0.12 0.85 0.2 0.03],...
            'String', 'Parametrii de intrare',...
            'Fontsize',10);

editAmplitude=uieditfield(fig,"numeric", ...
               'Position', [320 750 150 30],...
               'Value', amplitude,...
               "ValueDisplayFormat","%.2f Amplitudine",...
               "ValueChangedFcn",@(value,event) amplitudeChanged(value));

JitterBox = uicheckbox(fig, 'Text','Jiter',...
                  'Value', 0,...
                  'Position',[320 700 150 30],...
                  "ValueChangedFcn",@(value,event) jitterChanged(value));

GaussianBox = uicheckbox(fig, 'Text','Gaussian',...
                  'Value', 0,...
                  'Position',[320 650 150 30],...
                  "ValueChangedFcn",@(value,event) gaussianChanged(value));

EchoBox = uicheckbox(fig, 'Text','Echo',...
                  'Value', 0,...
                  'Position',[320 600 150 30],...
                  "ValueChangedFcn",@(value,event) echoChanged(value));

AwgBox = uicheckbox(fig, 'Text','Mediere',...
                  'Value', 0,...
                  'Position',[320 550 150 30],...
                  "ValueChangedFcn",@(value,event) awgChanged(value));

%---Exit---%
Exit=uicontrol(fig,'Style','pushbutton',...
                  'Units','normalized',...
                  'Position',[0.025 0.70 0.08 0.08],...
                  'backgroundcolor','red',...
                  'Fontsize',12,...
                  'String','Exit',...
                  'Tag','iesire',...
                  'TooltipString','Apasati butonul pentru a iesi din program.',...
                  'Callback',@(h,e) close(fig));

%---Pause/Resume---%
Pause=uicontrol(fig,'Style','pushbutton',...
                  'Units','normalized',...
                  'Position',[0.025 0.60 0.08 0.08],...
                  'backgroundcolor','yellow',...
                  'Fontsize',12,...
                  'String','Pause',...
                  'Tag','pauza',...
                  'TooltipString','Apasati butonul pentru a pune pauza/continua',...
                  'Callback',@(h,e) pauseCharts);

%---RESET---%
uicontrol(fig,'Style','pushbutton',... % create a reset button
'Units','normalized',...
'Position',[0.025 0.80 0.08 0.08],...
'string','RESET',...
'TooltipString','Apasati butonul pentru a reseta programul.',...
'Callback',{@(h,e) reset});

    function reset()
        close(fig);
        main();
    end

    function pauseCharts()
        if isPause == false 
            isPause = ~isPause;
            Pause.String = 'Resume';
        else 
            isPause = ~isPause;
            Pause.String = 'Pause';
            while isPause == 0
            chart(fig,amplitude,isJitter,isGaussian,isEcho,isAwg);
            pause(1);
            end
        end
        
    end

    function amplitudeChanged(value)
        amplitude = value.Value;
    end

    function jitterChanged(value)
     isJitter = value.Value;
    end

    function gaussianChanged(value)
     isGaussian = value.Value;
    end

    function echoChanged(value)
     isEcho = value.Value;
    end

    function awgChanged(value)
     isAwg = value.Value;
    end

%---Render charts---%
while isPause == 0
chart(fig,ActionText,amplitude,isJitter,isGaussian,isEcho,isAwg);
pause(5);
end
end